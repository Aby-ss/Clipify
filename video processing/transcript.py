import subprocess
import speech_recognition as sr

def transcribe_video_with_timestamps(video_path, output_text_path='transcript_with_timestamps.txt'):
    """Converts a video file to a text file with timestamps using speech recognition with Pocketsphinx."""
    # Extract audio from video
    audio_path = 'temp_audio.wav'
    command = f'ffmpeg -i "{video_path}" -ab 160k -ar 44100 -vn {audio_path}'
    subprocess.call(command, shell=True)

    # Use speech recognition to transcribe the audio file
    recognizer = sr.Recognizer()
    with sr.AudioFile(audio_path) as source:
        audio = recognizer.record(source)  # read the entire audio file

    try:
        # Recognize speech using Sphinx with detailed result
        text = recognizer.recognize_sphinx(audio, show_all=True)
        if text:
            process_transcript(text, output_text_path)
    except sr.UnknownValueError:
        print("Sphinx could not understand audio")
    except sr.RequestError as e:
        print("Sphinx error; {0}".format(e))

def process_transcript(decoder, output_path):
    """Processes the decoder object from Sphinx, extracting transcripts with timestamps."""
    with open(output_path, 'w') as file:
        # Iterating over segments generated by Sphinx
        for segment in decoder.seg():
            start_time = segment.start_frame / 100  # Convert from 100 frames/sec to seconds
            end_time = segment.end_frame / 100
            transcript = segment.word
            file.write(f"{start_time:.2f}-{end_time:.2f}: {transcript}\n")
        print("Transcription with timestamps has been saved to", output_path)

# Example usage
video_path = input("Enter the path to your video file: ")
transcribe_video_with_timestamps(video_path)
